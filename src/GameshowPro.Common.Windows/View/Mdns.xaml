<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:commodel="clr-namespace:GameshowPro.Common.Model;assembly=GameshowPro.Common"
                    xmlns:conv="clr-namespace:GameshowPro.Common.Converters"
                    xmlns:comview="clr-namespace:GameshowPro.Common.View"
                    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"  
                    >
    <conv:GreaterThanToBooleanConverter FalseVisibility="Collapsed" x:Key="GreaterThanToBooleanConverter"/>
    <conv:MultiValueConverter x:Key="MultiValueConverter"/>
    <DataTemplate DataType="{x:Type commodel:IMdnsMatchedServicesMonitor}" x:Key="IMdnsMatchedServicesMonitor.Warning">
        <controls:DropDownButton Width="25" Height="25" ItemsSource="{Binding Services}">
            <controls:DropDownButton.ItemTemplate>
                <DataTemplate DataType="commodel:IMdnsMatchedService">
                    <controls:DropDownButton Icon="{iconPacks:Material Kind=NetworkOutline}" Content="{Binding HostName}" HorizontalContentAlignment="Left" ItemsSource="{Binding Endpoints}" DisplayMemberPath="Address" ToolTip="Click to show addresses for this host"/>
                </DataTemplate>
            </controls:DropDownButton.ItemTemplate>
            <controls:DropDownButton.Style>
                <Style TargetType="controls:DropDownButton" BasedOn="{StaticResource CircleDropDownButton}">
                    <Setter Property="Icon" Value="{iconPacks:Material Kind=AccessPointCheck, Width=15, Height=15}" />
                    <Setter Property="Foreground" Value="LightGray"/>
                    <Setter Property="ToolTip" Value="No conflicting application instances found"/>
                    <Style.Resources>
                        <Storyboard x:Key="flashAnimation" >
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.5" RepeatBehavior="Forever" >
                                <ColorKeyFrameCollection>
                                    <DiscreteColorKeyFrame Value="Red" KeyTime="0:0:0.1"/>
                                    <DiscreteColorKeyFrame Value="Transparent" KeyTime="0:0:0.2"/>
                                    <DiscreteColorKeyFrame Value="Blue" KeyTime="0:0:0.3"/>
                                    <DiscreteColorKeyFrame Value="Transparent" KeyTime="0:0:0.4"/>
                                </ColorKeyFrameCollection>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </Style.Resources>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                <Condition Binding="{Binding Services.Length, Converter={StaticResource GreaterThanToBooleanConverter}, ConverterParameter={conv:Int32 0}}" Value="{conv:Bool True}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ToolTip" Value="Conflicting application instances found! Click for details"/>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="flash" Storyboard="{StaticResource flashAnimation}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="flash"/>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Services.Length, Converter={StaticResource GreaterThanToBooleanConverter}, ConverterParameter={conv:Int32 0}}" Value="{conv:Bool True}">
                            <Setter Property="Icon" Value="{iconPacks:RemixIcon Kind=AlarmWarningFill, Width=15, Height=15}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:DropDownButton.Style>
        </controls:DropDownButton>
    </DataTemplate>
    <DataTemplate DataType="{x:Type commodel:IMdnsMatchedServicesMonitor}" x:Key="IMdnsMatchedServicesMonitor.Search">
        <controls:DropDownButton Width="25" Height="25" ItemsSource="{Binding Services}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContentControl}}" DisplayMemberPath="HostName">
            <controls:DropDownButton.Style>
                <Style TargetType="controls:DropDownButton" BasedOn="{StaticResource CircleDropDownButton}">
                    <Setter Property="Icon" Value="{iconPacks:Material Kind=CloudSearch, Width=15, Height=15}" />
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="ToolTip" Value="No services discovered"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Services.Length, Converter={StaticResource GreaterThanToBooleanConverter}, ConverterParameter={conv:Int32 0}}" Value="{conv:Bool True}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Setter Property="ToolTip" Value="Services discovered"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Static DependencyProperty.UnsetValue}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:DropDownButton.Style>
            <controls:DropDownButton.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                    <Setter Property="Command" Value="{Binding Parent.MatchedServiceSelectedCommand}" />
                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                <Binding Path="Tag" RelativeSource="{RelativeSource AncestorType={x:Type controls:DropDownButton}}" />
                                <Binding />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </controls:DropDownButton.ItemContainerStyle>
        </controls:DropDownButton>
    </DataTemplate>
</ResourceDictionary>
