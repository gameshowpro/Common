<ResourceDictionary x:Class="Barjonas.Common.View.SharedStyles"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:conv="clr-namespace:Barjonas.Common.Converters"
             mc:Ignorable="d" >
    <conv:MatchToBooleanConverter x:Key="MatchToBooleanConverter"/>
    <conv:MatchToBooleanConverter x:Key="NoMatchToBooleanConverter" Invert="true"/>
    <conv:MatchToBooleanConverter x:Key="MatchToBooleanConverterWithCollapse" FalseVisibility="Collapsed" />
    <conv:MatchToBooleanConverter x:Key="NoMatchToBooleanConverterWithCollapse" FalseVisibility="Collapsed" Invert="true"/>
    <Thickness x:Key="ControlMargin">10</Thickness>
    <Thickness x:Key="ControlSmallMargin">5</Thickness>
    <SolidColorBrush x:Key="ControlGroupBackground" Color="#22000000" />
    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="controls:TextBoxHelper.SelectAllOnFocus" Value="True"/>
        <Setter Property="controls:TextBoxHelper.UseFloatingWatermark" Value="True"/>
        <Setter Property="Margin" Value="{StaticResource ControlSmallMargin}"/>
    </Style>
    <Style TargetType="iconPacks:PackIconModern">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
    </Style>
    <SolidColorBrush Color="#ff9933" x:Key="MahApps.Brushes.Accent3"/>
    <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Circle}" x:Key="CircleButton">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#ff9933" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource MahApps.Styles.ToggleButton.Circle}" x:Key="CircleToggle">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#ff9933" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CircleDropDownButton"
                       BasedOn="{StaticResource {x:Type controls:DropDownButton}}"
                       TargetType="controls:DropDownButton">
        <Setter Property="ArrowVisibility" Value="Collapsed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DropDownButton}">
                    <Border x:Name="PART_Border"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding controls:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="True">
                        <controls:ClipBorder x:Name="PART_ClipBorder"
                                             CornerRadius="{TemplateBinding controls:ControlsHelper.CornerRadius}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Button x:Name="PART_Button"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                    Foreground="{TemplateBinding Foreground}"
                                    RenderOptions.ClearTypeHint="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(RenderOptions.ClearTypeHint), Mode=OneWay}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Style="{TemplateBinding ButtonStyle}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Icon}"
                                                          ContentTemplate="{TemplateBinding IconTemplate}"
                                                          Focusable="False"
                                                          RecognizesAccessKey="True"
                                                          UseLayoutRounding="False" />
                                <Button.ContextMenu>
                                    <ContextMenu x:Name="PART_Menu"
                                                 MinWidth="{TemplateBinding ActualWidth}"
                                                 DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                                 IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                 ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                                 ItemStringFormat="{TemplateBinding ItemStringFormat}"
                                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                                 ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                 ItemsPanel="{TemplateBinding ItemsPanel}"
                                                 ItemsSource="{TemplateBinding ItemsSource}"
                                                 Placement="Bottom"
                                                 StaysOpen="False"
                                                 Style="{TemplateBinding MenuStyle}"
                                                 UseLayoutRounding="False" />
                                </Button.ContextMenu>
                            </Button>
                        </controls:ClipBorder>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ButtonStyle" Value="{DynamicResource MahApps.Styles.Button.Circle}" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#ff9933" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <sys:Double x:Key="LargeFontSize">22</sys:Double>
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="Heading">
        <Setter Property="FontSize" Value="22"/>
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource Heading}" x:Key="SmallPrint">
        <Setter Property="FontSize" Value="10"/>
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="PropTitle">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="10"/>
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="PropValue">
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="FontSize" Value="24"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="Header">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="Margin" Value="{StaticResource  ControlSmallMargin}"/>
    </Style>
    <Style TargetType="GridSplitter">
        <Setter Property="Foreground" Value="Crimson"/>
        <Setter Property="Background" Value="#171717"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    <Style TargetType="controls:NumericUpDown">
        <Setter Property="controls:TextBoxHelper.UseFloatingWatermark" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource  ControlSmallMargin}"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
    </Style>
    <ItemsPanelTemplate x:Key="UniformGridOneRow">
        <UniformGrid Rows="1"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="UniformGridOneColumn">
        <UniformGrid Columns="1"/>
    </ItemsPanelTemplate>
</ResourceDictionary>
